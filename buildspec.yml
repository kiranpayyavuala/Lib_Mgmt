version: 0.2
phases:
  pre_build:
#  install:
#    runtime-versions:
#      docker: latest
#      java: corretto8
#    commands:
#      - nohup /usr/local/bin/dockerd --host=unix:///var/run/docker.sock --host=tcp://127.0.0.1:2375 --storage-driver=overlay2 &
#      - timeout 15 sh -c "until docker info; do echo .; sleep 1; done"
#      - apt-get update -y
#      - apt-get install -y software-properties-common
#      - add-apt-repository ppa:openjdk-r/ppa
#      - pip install --user --upgrade awscli
#      - apt-get install -y openjdk-8-jdk
#      - apt-get install -y maven
#      - apt-get update -y
    commands:
      - echo In the pre_build phase...
      - echo Logging in to Amazon ECR....
      - aws --version
#      - aws ecr get-login-password --region ap-south-1 | docker login --username AWS --password-stdin YOUR_AWS_ACCOUNT_ID.dkr.ecr.ap-south-1.amazonaws.com
#      - Replace with this to your repository URI
      - docker login -u AWS -p $(aws ecr get-login-password --region us-east-1) 637423558049.dkr.ecr.us-east-1.amazonaws.com
      - REPOSITORY_URI=637423558049.dkr.ecr.us-east-1.amazonaws.com/springbootapp
      - IMAGE_TAG=build-$(echo $CODEBUILD_BUILD_ID | awk -F":" '{print $2}')
  build:
    commands:
      - echo Build started on `date`
      - echo building the Jar file
      - mvn clean
      - mvn install
      - echo Building the Docker image...
      - docker build -t $REPOSITORY_URI:latest .
      - docker tag $REPOSITORY_URI:latest $REPOSITORY_URI:$IMAGE_TAG
  post_build:
    commands:
      - echo Build completed on `date`
      - echo pushing to repo
      - docker push $REPOSITORY_URI:latest
      - docker push $REPOSITORY_URI:$IMAGE_TAG
      - echo Writing image definitions file...
      # Give your container name
      - DOCKER_CONTAINER_NAME=springbootapp
      - printf '[{"name":"%s","imageUri":"%s"}]' $DOCKER_CONTAINER_NAME $REPOSITORY_URI:$IMAGE_TAG > imagedefinitions.json
      - echo $DOCKER_CONTAINER_NAME
      - echo printing imagedefinitions.json
      - cat imagedefinitions.json
artifacts:
  files:
    - imagedefinitions.json
    - target/springboot-aws-deploy.jar
